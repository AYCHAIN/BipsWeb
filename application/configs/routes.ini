[routes]

routes.auth.route = "auth"
routes.auth.defaults.controller = index
routes.auth.defaults.action = auth

routes.logout.route = "logout"
routes.logout.defaults.controller = index
routes.logout.defaults.action = logout

routes.resetsignup.route = "resetsignup"
routes.resetsignup.defaults.controller = index
routes.resetsignup.defaults.action = resetsignup

routes.api.route = "api"
routes.api.defaults.controller = index
routes.api.defaults.action = api

routes.about.route = "about"
routes.about.defaults.controller = index
routes.about.defaults.action = about

routes.status.route = "status"
routes.status.defaults.controller = index
routes.status.defaults.action = status

routes.mounted.route = "mounted"
routes.mounted.defaults.controller = index
routes.mounted.defaults.action = mounted

routes.contact.route = "contact"
routes.contact.defaults.controller = index
routes.contact.defaults.action = contact

routes.security.route = "security"
routes.security.defaults.controller = index
routes.security.defaults.action = security

routes.plans.route = "plans"
routes.plans.defaults.controller = plans
routes.plans.defaults.action = index

routes.plans.route = "plan/:planId"
routes.plans.defaults.controller = plans
routes.plans.defaults.action = planselect

routes.upgradeplan.route = "plans/upgrade"
routes.upgradeplan.defaults.controller = plans
routes.upgradeplan.defaults.action = upgrade

routes.removeuser.route = "plans/removeuser"
routes.removeuser.defaults.controller = plans
routes.removeuser.defaults.action = rmuser

routes.invoiced.route = "plans/invoice"
routes.invoiced.defaults.controller = plans
routes.invoiced.defaults.action = invoice

routes.tos.route = "terms-of-service"
routes.tos.defaults.controller = index
routes.tos.defaults.action = tos

routes.privacy.route = "privacy"
routes.privacy.defaults.controller = index
routes.privacy.defaults.action = privacy

routes.optin.route = "opt-in"
routes.optin.defaults.controller = index
routes.optin.defaults.action = optin

routes.licensing.route = "licensing"
routes.licensing.defaults.controller = index
routes.licensing.defaults.action = licensing

routes.widget.route = "widget/:payload"
routes.widget.defaults.controller = widget
routes.widget.defaults.action = index

routes.user.route = "user/:username"
routes.user.defaults.controller = user
routes.user.defaults.action = index

routes.share.route = "share/:id"
routes.share.defaults.controller = share
routes.share.defaults.action = index

routes.share_install.route = "install/share/:id"
routes.share_install.defaults.controller = share
routes.share_install.defaults.action = install

routes.share_slug.route = "share/:username/:slug"
routes.share_slug.defaults.controller = share
routes.share_slug.defaults.action = index

routes.widget_render.route = "render/:id"
routes.widget_render.defaults.controller = share
routes.widget_render.defaults.action = render

routes.email_verify_accept.route = "emitter/email_verify/:mode"
routes.email_verify_accept.defaults.controller = emitter
routes.email_verify_accept.defaults.action = emailverify

routes.docs.route = "docs/:namespace/:section/:subsection"
routes.docs.defaults.controller = docs
routes.docs.defaults.action = index
routes.docs.defaults.namespace = overview
routes.docs.defaults.section = ""
routes.docs.defaults.subsection = ""

; -- dashboard

routes.dash.route = "dash"
routes.dash.defaults.controller = dash
routes.dash.defaults.action = index

routes.signup.route = "signup"
routes.signup.defaults.controller = auth
routes.signup.defaults.action = signup

routes.pw.route = "reset"
routes.pw.defaults.controller = auth
routes.pw.defaults.action = pwreset

routes.checkun.route = "signup/check"
routes.checkun.defaults.controller = auth
routes.checkun.defaults.action = checkusername

routes.refresh.route = "auth/refresh"
routes.refresh.defaults.controller = auth
routes.refresh.defaults.action = refresh

routes.newpw.route = "auth/newpw"
routes.newpw.defaults.controller = dash
routes.newpw.defaults.action = newpassword

routes.setname.route = "auth/setname"
routes.setname.defaults.controller = dash
routes.setname.defaults.action = name

routes.regentoken.route = "auth/regen"
routes.regentoken.defaults.controller = auth
routes.regentoken.defaults.action = regen

routes.regenav.route = "auth/regenav"
routes.regenav.defaults.controller = auth
routes.regenav.defaults.action = regenav


; API oauth wrapper
routes.proxy.route = "proxy"
routes.proxy.defaults.controller = dash
routes.proxy.defaults.action = proxy

routes.oauthcb.route = "ocb/:pod"
routes.oauthcb.defaults.controller = index
routes.oauthcb.defaults.action = oauthcb

routes.notfound.route = '404'
routes.notfound.defaults.controller = index
routes.notfound.defaults.action = notfound

routes.maintenance.route = 'maintenance'
routes.maintenance.defaults.controller = index
routes.maintenance.defaults.action = maintenance

routes.timeout.route = 'timeout'
routes.timeout.defaults.controller = index
routes.timeout.defaults.action = timeout
